import GeneticAlgorithm.InstrumentCode.*;

public class Triangle instantiates BranchInstrumentor{

	private int side1;
	private int side2;
	private int side3;

	public Triangle() {
		super();
	}
	
	public Triangle(int side1, int side2, int side3) {
		this.side1 = side1;
		this.side2 = side2;
		this.side3 = side3;
	}
	
	public Triangle(int side1, int side2) {
		this.side1 = side1;
		this.side3 = side1;
		this.side2 = side2;
	}
	
	public Triangle(int side) {
		this.side1 = side;
		this.side2 = side;
		this.side3 = side;
	}
	
	public static String checkTriangle() {
		String type = "";
		if ((side1 + side2 > side3) && (side3 + side2 > side1) && (side1 + side3 > side2)) {
			if ((side1 != side2) && (side1 != side3) && (side2 != side3)) {
				type = "Is triangle scalene";
			} else {
				if (((side1 == side2) && (side1 != side3)) || ((side1 == side3) && (side1 != side2)) || ((side2 == side3) && (side2 != side1))) {
					type = "Is triangle isosceles ";
				} else {
					type = "Is triangle equilateral ";
				}
			}
		} else {
			type = "Not a triangle";
		}
		return type;
	}
}